/*
 * Copyright (C) 2013 Invenzzia Group <http://www.invenzzia.org/>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.invenzzia.opentrans.lightweight.ui.tabs.infrastructure;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.invenzzia.opentrans.visitons.data.Stop.StopRecord;

/**
 *
 * @author Tomasz JÄ™drzejewski
 */
public class InfrastructureTab extends javax.swing.JPanel {

	/**
	 * Infrastructure listener set.
	 */
	private Set<IInfrastructureTabListener> listeners;
	/**
	 * Currently selected record.
	 */
	private StopRecord selectedRecord;
	/**
	 * Current stop list.
	 */
	private List<StopRecord> currentContent;

	/**
	 * Creates new form InfrastructureTab
	 */
	public InfrastructureTab() {
		this.initComponents();
		this.listeners = new LinkedHashSet<>();
	}

	/**
	 * Adds a new infrastructure tab event listener.
	 *
	 * @param listener
	 */
	public void addInfrastructureTabListener(IInfrastructureTabListener listener) {
		this.listeners.add(listener);
	}

	/**
	 * Removes the existing infrastructure tab event listener.
	 *
	 * @param listener
	 */
	public void removeInfrastructureTabListener(IInfrastructureTabListener listener) {
		this.listeners.remove(listener);
	}

	/**
	 * Clears all the infrastructure tab event listeners.
	 */
	public void removeInfrastructureTabListeners() {
		this.listeners.clear();
	}

	/**
	 * Injects the new table model to the stop list table.
	 *
	 * @param tableModel Brand new table model.
	 */
	public void populateStopListTable(List<StopRecord> stops) {
		this.currentContent = stops;
		this.stopListTable.setModel(new StopTableModel(stops));
	}
	
	/**
	 * Sets the name displayed in the currently visible stop.
	 * 
	 * @param name New name
	 */
	public void setDetailedStopName(String name) {
		this.detailsStopName.setText(name);
	}
	
	/**
	 * Returns the currently displayed detailed stop name.
	 * 
	 * @return Detailed stop name.
	 */
	public String getDetailedStopName() {
		return this.detailsStopName.getText();
	}
	
	/**
	 * Sets the new selected record.
	 * 
	 * @param record Selected record.
	 */
	private void setSelectedRecord(StopRecord record) {
		this.selectedRecord = record;
		if(null != record) {
			this.editStopButton.setEnabled(true);
			this.removeStopButton.setEnabled(true);
		} else {
			this.editStopButton.setEnabled(false);
			this.removeStopButton.setEnabled(false);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
	 * method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
      // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
      private void initComponents() {

            jPanel1 = new javax.swing.JPanel();
            addStopButton = new javax.swing.JButton();
            editStopButton = new javax.swing.JButton();
            removeStopButton = new javax.swing.JButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            stopListTable = new javax.swing.JTable();
            StopSelectionListener lst = new StopSelectionListener();
            stopListTable.getSelectionModel().addListSelectionListener(lst);
            stopListTable.addMouseListener(lst);
            jPanel2 = new javax.swing.JPanel();
            jLabel1 = new javax.swing.JLabel();
            detailsStopName = new javax.swing.JTextField();
            jLabel2 = new javax.swing.JLabel();
            viewSelector = new javax.swing.JComboBox();
            jScrollPane2 = new javax.swing.JScrollPane();
            viewTable = new javax.swing.JTable();

            setPreferredSize(new java.awt.Dimension(900, 535));

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("All stops"));
            jPanel1.setPreferredSize(new java.awt.Dimension(500, 492));

            addStopButton.setText("Add");
            addStopButton.setPreferredSize(new java.awt.Dimension(100, 25));
            addStopButton.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        addStopButtonActionPerformed(evt);
                  }
            });

            editStopButton.setText("Edit");
            editStopButton.setEnabled(false);
            editStopButton.setPreferredSize(new java.awt.Dimension(100, 25));
            editStopButton.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        editStopButtonActionPerformed(evt);
                  }
            });

            removeStopButton.setText("Remove");
            removeStopButton.setEnabled(false);
            removeStopButton.setPreferredSize(new java.awt.Dimension(100, 25));
            removeStopButton.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        removeStopButtonActionPerformed(evt);
                  }
            });

            stopListTable.setModel(new javax.swing.table.DefaultTableModel(
                  new Object [][] {

                  },
                  new String [] {

                  }
            ));
            stopListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            jScrollPane1.setViewportView(stopListTable);

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                  jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                              .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(addStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(editStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(removeStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                  jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(addStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(editStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(removeStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
            );

            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Stop details"));
            jPanel2.setPreferredSize(new java.awt.Dimension(400, 124));

            jLabel1.setText("Name:");
            jLabel1.setToolTipText("");

            detailsStopName.setEditable(false);
            detailsStopName.setText("Stop name");

            jLabel2.setText("View:");

            viewSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Platforms", "Lines", "Passenger flow areas" }));

            viewTable.setModel(new javax.swing.table.DefaultTableModel(
                  new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                  },
                  new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                  }
            ));
            jScrollPane2.setViewportView(viewTable);

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                  jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(detailsStopName)
                              .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(viewSelector, 0, 313, Short.MAX_VALUE))
                              .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(0, 0, Short.MAX_VALUE))
                              .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                        .addContainerGap())
            );
            jPanel2Layout.setVerticalGroup(
                  jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detailsStopName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                              .addComponent(viewSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                  layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                        .addContainerGap())
            );
            layout.setVerticalGroup(
                  layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                              .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
                        .addContainerGap())
            );
      }// </editor-fold>//GEN-END:initComponents

      private void addStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStopButtonActionPerformed
		for(IInfrastructureTabListener listener : this.listeners) {
			listener.addStopButtonClicked();
		}
      }//GEN-LAST:event_addStopButtonActionPerformed

      private void editStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStopButtonActionPerformed
		final InfrastructureTabEvent event = new InfrastructureTabEvent(this.selectedRecord);
		for(IInfrastructureTabListener listener : this.listeners) {
			listener.editStopButtonClicked(event);
		}
      }//GEN-LAST:event_editStopButtonActionPerformed

      private void removeStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStopButtonActionPerformed
		final InfrastructureTabEvent event = new InfrastructureTabEvent(this.selectedRecord);
		for(IInfrastructureTabListener listener : this.listeners) {
			listener.removeStopButtonClicked(event);
		}
      }//GEN-LAST:event_removeStopButtonActionPerformed
      // Variables declaration - do not modify//GEN-BEGIN:variables
      private javax.swing.JButton addStopButton;
      private javax.swing.JTextField detailsStopName;
      private javax.swing.JButton editStopButton;
      private javax.swing.JLabel jLabel1;
      private javax.swing.JLabel jLabel2;
      private javax.swing.JPanel jPanel1;
      private javax.swing.JPanel jPanel2;
      private javax.swing.JScrollPane jScrollPane1;
      private javax.swing.JScrollPane jScrollPane2;
      private javax.swing.JButton removeStopButton;
      private javax.swing.JTable stopListTable;
      private javax.swing.JComboBox viewSelector;
      private javax.swing.JTable viewTable;
      // End of variables declaration//GEN-END:variables

	/**
	 * Handles selecting the row in a table and a double-click on the row.
	 */
	class StopSelectionListener extends MouseAdapter implements ListSelectionListener {

		@Override
		public void valueChanged(ListSelectionEvent event) {
			int row = stopListTable.getSelectedRow();
			if(-1 == row) {
				setSelectedRecord(null);
			} else {
				setSelectedRecord(currentContent.get(row));
			}
			final InfrastructureTabEvent itEvent = new InfrastructureTabEvent(selectedRecord);
			for(IInfrastructureTabListener listener : listeners) {
				listener.stopSelected(itEvent);
			}
		}

		@Override
		public void mouseClicked(MouseEvent e) {
			if(e.getClickCount() == 2) {
				JTable target = (JTable) e.getSource();
				
				int row = target.getSelectedRow();
				if(0 <= row) {
					setSelectedRecord(currentContent.get(row));
					final InfrastructureTabEvent itEvent = new InfrastructureTabEvent(selectedRecord);
					for(IInfrastructureTabListener listener : listeners) {
						listener.stopSelected(itEvent);
						listener.editStopButtonClicked(itEvent);
					}
				}
			}
		}
	}

	/**
	 * The event used in the notifications about the state change.
	 */
	public static class InfrastructureTabEvent {

		private final StopRecord record;

		public InfrastructureTabEvent() {
			this.record = null;
		}

		public InfrastructureTabEvent(StopRecord record) {
			this.record = record;
		}

		public StopRecord getRecord() {
			return this.record;
		}
	}

	/**
	 * Allows writing notifications about GUI state changes.
	 */
	public static interface IInfrastructureTabListener {

		/**
		 * Notifies that the user clicked 'Add' button.
		 */
		public void addStopButtonClicked();

		/**
		 * Notifies that the user clicked 'Edit' button.
		 *
		 * @param event
		 */
		public void editStopButtonClicked(InfrastructureTabEvent event);

		/**
		 * Notifies that the user clicked 'Remove' button.
		 *
		 * @param event
		 */
		public void removeStopButtonClicked(InfrastructureTabEvent event);

		/**
		 * Notifies about a selected stop.
		 *
		 * @param event
		 */
		public void stopSelected(InfrastructureTabEvent event);
	}
}
