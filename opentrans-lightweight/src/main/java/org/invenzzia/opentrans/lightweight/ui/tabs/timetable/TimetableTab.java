/*
 * Copyright (C) 2013 Invenzzia Group <http://www.invenzzia.org/>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.invenzzia.opentrans.lightweight.ui.tabs.timetable;

import java.util.Set;
import org.invenzzia.opentrans.lightweight.model.IBatchModelListener;
import org.invenzzia.opentrans.lightweight.model.selectors.LineSelectionModel;

/**
 * The contents of the panel for managing the lines and timetables.
 * 
 * @author Tomasz JÄ™drzejewski
 */
public class TimetableTab extends javax.swing.JPanel implements IBatchModelListener<TimetableTabModel> {
	/**
	 * Timetable event listeners.
	 */
	private Set<ITimetableTabListener> listeners;
	
	/**
	 * Creates new form TimetableTab
	 */
	public TimetableTab() {
		this.initComponents();
	}
	
	/**
	 * Adds a new timetable tab event listener.
	 *
	 * @param listener
	 */
	public void addTimetableTabListener(ITimetableTabListener listener) {
		this.listeners.add(listener);
	}

	/**
	 * Removes the existing timetable tab event listener.
	 *
	 * @param listener
	 */
	public void removeTimetableTabListener(ITimetableTabListener listener) {
		this.listeners.remove(listener);
	}

	/**
	 * Clears all the timetable tab event listeners.
	 */
	public void removeTimetableTabListeners() {
		this.listeners.clear();
	}
	
	/**
	 * Sets the model for the line selection box.
	 * 
	 * @param model 
	 */
	public void setLineSelectionModel(LineSelectionModel model) {
		this.lineSelectionBox.setModel(model);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lineLabel = new javax.swing.JLabel();
        lineSelectionBox = new javax.swing.JComboBox();
        manageLinesButton = new javax.swing.JButton();
        serviceTypeButton = new javax.swing.JButton();
        servicePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceTable = new javax.swing.JTable();
        addCourseButton = new javax.swing.JButton();
        editCourseButton = new javax.swing.JButton();
        removeCourseButton = new javax.swing.JButton();

        lineLabel.setText("Line:");

        lineSelectionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        manageLinesButton.setText("Manage");
        manageLinesButton.setMaximumSize(new java.awt.Dimension(130, 25));
        manageLinesButton.setMinimumSize(new java.awt.Dimension(130, 25));
        manageLinesButton.setPreferredSize(new java.awt.Dimension(130, 25));

        serviceTypeButton.setText("Service types");
        serviceTypeButton.setMaximumSize(new java.awt.Dimension(130, 25));
        serviceTypeButton.setMinimumSize(new java.awt.Dimension(130, 25));
        serviceTypeButton.setPreferredSize(new java.awt.Dimension(130, 25));

        servicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Services"));

        serviceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "From", "To", "Brigade", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(serviceTable);

        javax.swing.GroupLayout servicePanelLayout = new javax.swing.GroupLayout(servicePanel);
        servicePanel.setLayout(servicePanelLayout);
        servicePanelLayout.setHorizontalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        servicePanelLayout.setVerticalGroup(
            servicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        addCourseButton.setText("Add");
        addCourseButton.setMaximumSize(new java.awt.Dimension(90, 25));
        addCourseButton.setMinimumSize(new java.awt.Dimension(90, 25));
        addCourseButton.setPreferredSize(new java.awt.Dimension(90, 25));

        editCourseButton.setText("Edit");
        editCourseButton.setMaximumSize(new java.awt.Dimension(90, 25));
        editCourseButton.setMinimumSize(new java.awt.Dimension(90, 25));
        editCourseButton.setPreferredSize(new java.awt.Dimension(90, 25));

        removeCourseButton.setText("Remove");
        removeCourseButton.setMaximumSize(new java.awt.Dimension(90, 25));
        removeCourseButton.setMinimumSize(new java.awt.Dimension(90, 25));
        removeCourseButton.setPreferredSize(new java.awt.Dimension(90, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(servicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lineLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lineSelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(manageLinesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(serviceTypeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lineLabel)
                    .addComponent(lineSelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageLinesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceTypeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(removeCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addCourseButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JButton editCourseButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lineLabel;
    private javax.swing.JComboBox lineSelectionBox;
    private javax.swing.JButton manageLinesButton;
    private javax.swing.JButton removeCourseButton;
    private javax.swing.JPanel servicePanel;
    private javax.swing.JTable serviceTable;
    private javax.swing.JButton serviceTypeButton;
    // End of variables declaration//GEN-END:variables

	@Override
	public void modelDataAvailable(TimetableTabModel model) {
		throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
	}
	
	public static class TimetableTabEvent {
	}
	
	/**
	 * Allows writing notification handlers about GUI state changes.
	 */
	public static interface ITimetableTabListener {
		/**
		 * Notifies that a course has been selected.
		 */
		public void courseSelected(TimetableTabEvent event);
		/**
		 * The user has clicked the 'Edit' button.
		 * 
		 * @param event 
		 */
		public void editRequested(TimetableTabEvent event);
	}
}
